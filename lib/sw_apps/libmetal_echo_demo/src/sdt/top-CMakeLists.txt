cmake_minimum_required (VERSION 3.0.2)
if (POLICY CMP0048)
  cmake_policy(SET CMP0048 NEW)
endif()

if (POLICY CMP0077)
  cmake_policy(SET CMP0077 NEW)
endif()

string(REGEX MATCH "r5" r5 "${CMAKE_SYSTEM_PROCESSOR}")
if (r5)
  unset (MACHINE CACHE)
  unset (CMAKE_SYSTEM_PROCESSOR)
  unset (PROJECT_MACHINE CACHE)


  set (MACHINE "zynqmp_r5" CACHE STRING "" FORCE)
  set (CROSS_PREFIX "armr5-none-eabi-" CACHE STRING "" FORCE)
  set (CMAKE_SYSTEM_PROCESSOR "arm" CACHE STRING "" FORCE)

  set (PROJECT_MACHINE "zynqmp_r5" CACHE STRING "" FORCE)
endif()

set (LIBMETAL_ROOT_DIR "${CMAKE_CURRENT_SOURCE_DIR}")

list (APPEND CMAKE_MODULE_PATH
      "${CMAKE_CURRENT_SOURCE_DIR}/cmake"
      "${CMAKE_CURRENT_SOURCE_DIR}/cmake/modules"
      "${CMAKE_CURRENT_SOURCE_DIR}/cmake/platforms")

include (syscheck)
project (metal_apps C)

include (CheckIncludeFiles)
include (CheckCSourceCompiles)
include (collect)
include (options)
set_property (GLOBAL PROPERTY "PROJECT_EC_FLAGS" -Wall -Wextra)
include (depends)

foreach(_inc_path ${CMAKE_INCLUDE_PATH})
  collect (PROJECT_INC_DIRS "${_inc_path}")
endforeach()

enable_testing ()

add_subdirectory (examples)

# vim: expandtab:ts=2:sw=2:smartindent
