# Copyright (c) 2021 Xilinx, Inc.  All rights reserved.
# SPDX-License-Identifier: MIT
cmake_minimum_required(VERSION 2.8.9)
include(${CMAKE_CURRENT_SOURCE_DIR}/../../../../cmake/common.cmake NO_POLICY_SCOPE)
project(uartns550)

set(UARTNS550_DIR "${CMAKE_SOURCE_DIR}")
find_package(UARTNS550)
list(APPEND defs "#ifndef XUARTNS550_CONFIG_H_\n")
list(APPEND defs "#define XUARTNS550_CONFIG_H_\n\n")
if (DEFINED STDIN_INSTANCE)
    set(index 0)
    LIST_INDEX(${index} ${STDIN_INSTANCE} "${DRIVER_INSTANCES}")
    list(GET TOTAL_DRIVER_PROP_LIST ${index} prop_list)
    list(GET ${prop_list} 1 base_addr)
    list(APPEND defs "#define XPAR_STDIN_IS_UARTNS550\n")
    list(APPEND defs "#define STDIN_BASEADDRESS ${base_addr}U\n")
    list(APPEND defs "#define STDOUT_BASEADDRESS ${base_addr}U\n")
endif()
list(APPEND defs "\n#endif")
file(WRITE ${CMAKE_SOURCE_DIR}/xuartns550_config.h ${defs})

collector_create (PROJECT_LIB_HEADERS "${CMAKE_CURRENT_SOURCE_DIR}")
collector_create (PROJECT_LIB_SOURCES "${CMAKE_CURRENT_SOURCE_DIR}")
include_directories(${CMAKE_BINARY_DIR}/include)
collect (PROJECT_LIB_SOURCES xuartns550.c)
collect (PROJECT_LIB_HEADERS xuartns550.h)
collect (PROJECT_LIB_SOURCES xuartns550_format.c)
collect (PROJECT_LIB_SOURCES xuartns550_g.c)
collect (PROJECT_LIB_HEADERS xuartns550_i.h)
collect (PROJECT_LIB_SOURCES xuartns550_intr.c)
collect (PROJECT_LIB_SOURCES xuartns550_l.c)
collect (PROJECT_LIB_HEADERS xuartns550_l.h)
collect (PROJECT_LIB_SOURCES xuartns550_options.c)
collect (PROJECT_LIB_SOURCES xuartns550_selftest.c)
collect (PROJECT_LIB_SOURCES xuartns550_sinit.c)
collect (PROJECT_LIB_SOURCES xuartns550_stats.c)
collector_list (_sources PROJECT_LIB_SOURCES)
collector_list (_headers PROJECT_LIB_HEADERS)
file(COPY ${_headers} DESTINATION ${CMAKE_BINARY_DIR}/include)
add_library(uartns550 STATIC ${_sources})
set_target_properties(uartns550 PROPERTIES LINKER_LANGUAGE C)
install(TARGETS uartns550 LIBRARY DESTINATION ${CMAKE_SOURCE_DIR}/build ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR})
